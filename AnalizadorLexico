/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analizadorlexicosintactico;

import java.util.Scanner;
import java.util.Stack;

/**
 *
 * @author Francisco Favela
 */
public class AnalizadorLexico {
     String reservada[] = {"array", "begin", "case", "const", "do", "else", "writeln","readln", "elseif", "end",
                          "for", "if", "loop", "module","function", "exit", "not", "of","mod","record","repeat","return",
                          "pocedure","by","then","to","until","var","while","with","true","false","div","integer","real",
                          "char","string","byte","boolean","string"};
    public int [][] matrizL={
            //	l	L	d	_	.	'	/	"	{	}	=	<	>	+	-	(	)	[	]	,	;	:	/t	/n	/b      !=
		{1	,1	,3	,506	,16	,6	,8	,15	,11	,506	,12	,11	,12	,113	,114	,118	,119	,120	,121	,122	,124	,125	,0	,0	,0	,505}	,
		{1	,1	,1	,2	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100	,100}	,
		{1	,1	,1	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501	,501}	,
		{101	,101	,3	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101	,101}	,
		{500	,500	,5	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500	,500}	,
		{102	,102	,5	,101	,101	,102	,102	,101	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102	,102}	,
		{6	,6	,6	,6	,6	,7	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6	,6}	,
		{103	,103	,103	,103	,103	,6	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103	,103}	,
		{116	,116	,116	,116	,116	,116	,116	,9	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116	,116}	,
		{9	,9	,9	,9	,9	,9	,9	,10	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9	,9}	,
		{502	,502	,502	,502	,502	,502	,104	,501	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502	,502}	,
		{11	,11	,11	,11	,11	,11	,11	,11	,11	,11	,11	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109	,109}	,
		{503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,106	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503	,503}	,
		{107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,109	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107	,107}	,
		{110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,11	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110	,110}	,
		{114	,114	,114	,114	,114	,114	,114	,115	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114	,114}	,
                {122	,122	,122	,122	,122	,123	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122	,122}	,
                {125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125	,125}

        };//
    Scanner parametro= new Scanner(System.in);
    public static String Enunciado="";
    Stack<Character> palabra = new Stack<>();    
    Stack<Character> palabra2 = new Stack<>();
    public static int ELERROR = 1;
    
    public void RecibeCadena() {
        System.out.println("escribe una palabra");
        Enunciado = parametro.nextLine();
        System.out.println("se recibio la orden: " + Enunciado);
    }
    public void Estados()
    {
	    System.out.prinln("Numeros Reales")//102

	System.out.prinln("Letrero")//103

	System.out.prinln("Comentario")//502
	System.out.prinln("Formato")//104
	System.out.prinln("Division")//116
	System.out.prinln("Comentarios")//105

	System.out.prinln("Operador Tomado")//508
	System.out.prinln("Igualda")//106
	System.out.prinln("Menor")//107
	System.out.prinln("Diferente")//108
	System.out.prinln("Menor igual")//109
	System.out.prinln("Mayor")//110
	System.out.prinln("Mayor Igual")//111
	System.out.prinln("Suma")//112
	System.out.prinln("Resta")//113
	System.out.prinln("Multiplicacion")//114
	System.out.prinln("Por Por")//115

	System.out.prinln("Parentesis que abre")//117
	System.out.prinln("Parentesis que cierra")//118
	System.out.prinln("Corchete que abre")//119
	System.out.prinln("Corchete que cierra")//120
	System.out.prinln("Coma")//121
	System.out.prinln("Punto")//122
	System.out.prinln("Punto y punto")//123
	System.out.prinln("Punto y coma")//124
	System.out.prinln("Dos puntos")//125
	System.out.prinln("Asignacion")//126
	
	System.out.prinln("Or")//503
	System.out.prinln("And")//504
	System.out.prinln("Not")//505
	System.out.prinln("Error Logico")//506
    }
    
    public void LlenarPilla(){
        
        for(int DD=0; DD<=Enunciado.length();DD++){
            palabra.push(Enunciado.charAt(DD));
        }
    }
    public void UltimoCaracter(){
        int lim = Enunciado.length();
        String Leida="";
        int AnchoPalabra=0;
        int SimboloDoble=0;
        int SimboloEsctrito=0;
        int apuntador=0;
        while(apuntador>lim){
        
            if((palabra.peek()>=65 || palabra.peek()<=90)||(palabra.peek()>=97 || palabra.peek() <=122  )){

                palabra2.push(palabra.pop());
                apuntador++;            
                AnchoPalabra++;
                Leida+=palabra2.pop();
                Leida=Leida.toLowerCase();
                
                switch (AnchoPalabra) {
                    case 2:
                        //Do        Of      By      To      If or
                        //Comparar si se parecen con un IF
                        //if
                        //Si el error se cumple pasa a error

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 3:
                        //End       For      Not     Mod     Var     Div    and not             
                        //Comparar si se parecen con un IF
                        //if

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 4:
                        //Case      Else    Loop    Exit    Then    With    True    Real    Char    Byte
                        //Comparar si se parecen con un IF
                        //if

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 5:
                        //Array     Begin   Const   Until   While   False
                        //Comparar si se parecen con un IF
                        //if

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 6:
                        //Readln    ElseIf  Module  Record  Repeat  Return  String
                        //Comparar si se parecen con un IF
                        //if

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 7:
                        //Writeln   Integer	Boolean
                        //Comparar si se parecen con un IF
                        //if

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    case 8:
                        //Function	Procedure
                        //Comparar si se parecen con un IF
                        //if

                        //Vaciar la palabra leida despues de usarla
                        Leida="";
                        break;
                    default: 
                        break;
                }                
            }

            else if(palabra.peek()>=33 || palabra.peek()<=62 ){
                AnchoPalabra=0;

                char Simbolo1=palabra.pop();
                if(apuntador==0){
                    ELERROR=-1;
                    System.out.println("Error no empieza con letra");
                }
                
                apuntador++; 
                Stack<Character> PilaSimbolos = new Stack<>();
                if (SimboloEsctrito==1){
                    PilaSimbolos.push('|');
                }
                else if (SimboloEsctrito==2){
                    PilaSimbolos.push('&');
                }
                else if (SimboloEsctrito==3){
                    PilaSimbolos.push('!');
                }

                //verificar el guion bajo
                else if(Simbolo1=='_'){
                    PilaSimbolos.push('_');
                }            
                else if(Simbolo1=='('){
                    PilaSimbolos.push(')');
                }
                else if(Simbolo1=='['){
                    PilaSimbolos.push(']');
                }
                else if(Simbolo1=='{'){
                    PilaSimbolos.push('}');
                }
                else if(Simbolo1=='"'){
                    PilaSimbolos.push('"');
                }
    //si llega un punto solo esta mal
                else if(Simbolo1=='.'){
                    PilaSimbolos.push('.');
                }
                else if(Simbolo1=='='){
                    PilaSimbolos.push('=');
                }
                else if(Simbolo1=='*'){
                    if(PilaSimbolos.peek()=='/'){
                        //comentarios activos
                    }else if(PilaSimbolos.peek()=='*'){
                        //Segunda y ultima a espera de un numero
                        SimboloDoble=2;
                    }
                    PilaSimbolos.push('*');
                }
                else if(Simbolo1=='>'){
                    if(PilaSimbolos.peek()=='<'){
                        //comentarios activos
                        SimboloDoble=2;
                    }
                    PilaSimbolos.push('*');
                }
                else if(Simbolo1=='='){
                    if(PilaSimbolos.peek()=='='||PilaSimbolos.peek()=='>'||PilaSimbolos.peek()=='<'||PilaSimbolos.peek()==':'){
                        //comentarios activos
                        SimboloDoble=2;
                    }
                    PilaSimbolos.push('=');
                }
                else if(Simbolo1=='+'){
                    PilaSimbolos.push('+');
                }
                else if(Simbolo1=='-'){
                    PilaSimbolos.push('-');
                }
                else if(Simbolo1=='/'){
                    if(PilaSimbolos.peek()=='*'){
                        System.out.println("Error no cerro comentarios");
                    }
                    PilaSimbolos.push('/');
                }
                else if (SimboloDoble==2&&(Simbolo1=='*'||Simbolo1=='>'||Simbolo1=='=')){
                        //Error de sintaxis
                    }
    //Simbolos que se cierran con un su pareja
                else if(Simbolo1==')'||Simbolo1==']'||Simbolo1=='}'||Simbolo1=='"'){
                    if(PilaSimbolos.empty()){
                        ELERROR=-1;
                    }
                    else if(Simbolo1!=PilaSimbolos.pop()){
                        ELERROR=-1;
                    }
                }
    //Simbolos que se cierran con numeros            
                else if(Simbolo1>=48||Simbolo1<=57){
                    if(null!=PilaSimbolos.peek())switch (PilaSimbolos.peek()) {
                        case '.':
                            PilaSimbolos.pop();
                            break;
                        case ',':
                            PilaSimbolos.pop();
                            break;
                        case '<':
                            PilaSimbolos.pop();
                            break;
                        case '>':
                            PilaSimbolos.pop();
                            break;
                        case '+':
                            PilaSimbolos.pop();
                            break;
                        case '-':
                            PilaSimbolos.pop();
                            break;
                        case '*':
                            PilaSimbolos.pop();
                            break;
                        case '/':
                            PilaSimbolos.pop();
                            break;
                        case '=':
                            PilaSimbolos.pop();
                            break;
                        case '|':
                            PilaSimbolos.pop();
                            break;
                        case '&':
                            PilaSimbolos.pop();
                            break;
                        case '!':
                            PilaSimbolos.pop();
                            break;
                        default:
                            break;
                    }
                }
    //Simbolos Swingers    
                else if(Simbolo1==')'||Simbolo1==']'||Simbolo1=='}'||Simbolo1=='"'||(Simbolo1>=48||Simbolo1<=57)){
                    if(PilaSimbolos.empty()){
                        ELERROR=-1;
                    }
                    else if(PilaSimbolos.pop()=='.'&&(Simbolo1<48||Simbolo1>57)){
                        ELERROR=-1;
                    }
                    else if(Simbolo1!=PilaSimbolos.pop()){
                        ELERROR=-1;
                    }
                }
            }

            else if(palabra.peek()==32){
                AnchoPalabra=0;

                palabra.pop();
                 if(apuntador==0){
                    //Pasa a error
                    ELERROR=-1;
                }
                //avanzar en la pila
                   apuntador++;                           
            }
            else{
                ELERROR=-1;
                System.out.println("Error caracter no valido");
            }            
        }
    }
    
}
